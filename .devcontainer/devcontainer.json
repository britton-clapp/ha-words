{
    "name": "Words devcontainer",
    
	//image can be the latest public dev container, 
	//or some locally build dev container based on https://github.com/LaggAt/ha-devcontainer
	"image": "ghcr.io/laggat/ha-devcontainer:main",
    //"image": "ha-devcontainer:dev",
    
	//run scripts/postCreate.sh after successful container creation. '/bin/bash -x' shows every line executed. 
    "postCreateCommand": "/bin/bash -x ${containerWorkspaceFolder}/.devcontainer/scripts/postCreate.sh",
    "postStartCommand": "/bin/echo ha-devcontainer started.", 
    "postAttachCommand": "/bin/echo ha-devcontainer attached.",
    //publish ha on 9123 when started
    "appPort": ["9123:8123"],
    //install these vscode extensions
    "extensions": [
        // debug bash scripts
        "rogalmic.bash-debug",
    ],
    //use these devcontainer settings
    "settings": {
		//linux line breaks
        "files.eol": "\n",
        //prefer ZSH shell
        "terminal.integrated.profiles.linux": {
            "zsh": {
                "path": "/usr/bin/zsh"
            }
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
    },
    //how to run the container, network mode, privileged, volumes, ...
    "runArgs": [
		"--name",
		"devcontainer_jokes",
		"--network",
		"host",
		"--privileged",
		"-v", "/etc/machine-id:/etc/machine-id:ro",
		//"-v", "/run/dbus:/run/dbus:ro",
		"-v", "/run/user/1000/bus:/run/user/1000/bus",
		"-v", "/dev:/dev:ro",
		"-v", "/run/udev:/run/udev:ro",
		"-v", "/run/docker.sock:/run/docker.sock:rw"
	],
    //Environment Variables to set in the dev container
    "containerEnv": {},
    //security options
    "securityOpt": [
		"seccomp:unconfined",
		"apparmor:unconfined"
	],
    //user defaults to vscode, let's use root for easier handling for now
	"remoteUser": "root",
	"containerUser": "root",
    //set context to the root folder (which is one up from ./.devcontainer)
    "context": ".."
}